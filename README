README


2012-03-14 Wed
$ dpkg --get-selections
$ dpkg -s <packagename>  ;; Info about installed package.

Application           DebPackage
-----------           ----------
a2ps                  a2ps
git                   git-core
                      git-gui
                      git-doc
gvim                  vim-gnome
g++                   g++
Exuberant C-tags      exuberant-ctags
gnuplot               gnuplot
graphviz              graphviz
Erlang                erlang-base
Firefox               firefox
Subversion            subversion
valgrind              valgrind

---

Git setup:
$ sudo apt-get install git-core git-gui git-doc
$ git config --global user.name "Firstname Lastname"
$ git config --global user.email "your_email@youremail.com"

Configure git for GitHub:
$ git config --global github.user <github_username>
$ git config --global github.token <github_token> ;; See GitHub->AccountSettings.
$ git clone git@github.com:jpmaloney/basic.git

---

Vim config (after "git clone" above):
$ ln -s ~/basic/vimrc ~/.vimrc

---

Install grin:
Reference: http://pypi.python.org/pypi/grin
$ sudo apt-get install python-setuptools
$ sudo easy-install grin

---

Boost C++ libraries

Install some packages:
Library               DebPackage
-------               ----------
bzip2                 libbz2-dev
python-dev            python-dev

Download the Boost C++ libraries:
$ cd ~
$ mkdir -p ~/thirdparty/boost_versions ; cd ~/thirdparty/boost_versions
$ wget http://downloads.sourceforge.net/project/boost/boost/1.49.0/boost_1_49_0.tar.bz2
$ tar -xvf boost_1_49_0.tar.bz2

Make a symbolic link to the Boost C++ libraries:
$ cd ~/thirdparty
$ ln -s ~/thirdparty/boost_versions/boost_1_49_0 ~/thirdparty/boost

Verify that Boost header files are usable (after "git clone" above):
$ cd ~/basic/tests
$ g++ -I ~/thirdparty/boost boost_example.cpp -o boost_example
$ echo 1 2 3 | ./boost_example

Build custom binaries:
$ cd ~/thirdparty/boost_versions/boost_1_49_0/tools/build/v2
$ ./bootstrap.sh
;; Note: Must use ${HOME} rather than ~.
$ ./b2 install --prefix=${HOME}/thirdparty/boost_versions/boost_1_49_0_boost_build
$ ln -s ~/thirdparty/boost_versions/boost_1_49_0_boost_build boost_build
;; Add b2 and bjam to the PATH env var:
$ vim ~/.bashrc
;; Add this line to ~/.bashrc:
export PATH=${PATH}:${HOME}/thirdparty/boost_build/bin

$ cd ~/thirdparty/boost_versions/boost_1_49_0
$ b2 toolset=gcc stage

Verify that Boost binary libraries are usable (after "git clone" and "b2 ..." above):
$ cd ~/basic/tests
$ g++ -I ~/thirdparty/boost boost_example_lib.cpp -o boost_example_lib \
~/thirdparty/boost/stage/lib/libboost_regex.a
$ ./boost_example_lib

---

Get and build LLVM/clang on Linux:

LLVM:
$ mkdir ~/llvm ; cd ~/llvm
$ svn co http://llvm.org/svn/llvm-project/llvm/trunk llvm

clang:
$ cd ~/llvm/llvm/tools
$ svn co http://llvm.org/svn/llvm-project/cfe/trunk clang

compiler-rt:
$ cd ~/llvm/llvm/projects
$ svn co http://llvm.org/svn/llvm-project/compiler-rt/trunk compiler-rt

libc++:
$ cd ~/llvm/llvm/projects
$ svn co http://llvm.org/svn/llvm-project/libcxx/trunk libcxx
----
$ cd ~/llvm/llvm/projects/libcxx/lib
$ ./buildit    ;; This builds ~/llvm/llvm/tools/libcxx/lib/libc++.so.1.0
$ cd /usr/lib
$ sudo ln -sf ~/llvm/llvm/tools/libcxx/lib/libc++.so.1.0 libc++.so.1.0
$ sudo ln -sf libc++.so.1.0 libc++.so
$ cd /usr/include/c++
$ sudo ln -sf ~/llvm/llvm/tools/libcxx/include v1

libc++abi:
$ cd ~/llvm/llvm/projects
$ svn co http://llvm.org/svn/llvm-project/libcxxabi/trunk libcxxabi

Configure and build:
First time:
$ cd ~/llvm
$ mkdir build ; cd build
$ ../llvm/configure
$ make

Thereafter:
$ cd ~/llvm/build
$ make update
$ make

Run clang:
$ cd ~/basic
$ clang++ -std=c++0x -stdlib=libc++ hello.cpp

---

Chrome                ???

---

Typesafe Stack

---

===============================================================================

2012-03-13 Tue
Create this git repository.

===============================================================================

#
# end
#

