README

-------------------------------------------------------------------------------
Copyright 2012 John P. Maloney

Distributed under the Apache License, Version 2.0.
(See accompanying file LICENSE_2_0 or copy at
http://www.apache.org/licenses/LICENSE-2.0)
-------------------------------------------------------------------------------

===============================================================================

2012-04-04 Wed
References:
http://gcc.gnu.org/onlinedocs/gcc/Debugging-Options.html#Debugging-Options

$ gcc -print-file-name=libc
$ gcc -print-search-dirs
$ gcc -print-sysroot
$ gcc -print-sysroot-headers-suffix
$ gcc -dumpmachine
$ gcc -dumpversion
$ gcc -dumpspecs

---

References:
http://projects.gnome.org/nemiver/

$ mkdir -p ~/thirdparty/nemiver ; cd ~/thirdparty/nemiver
$ git clone git://git.gnome.org/nemiver nemiver.git

---

References:
http://www.zero-bugs.com/2.0/product_intro.html
http://zerobugs.codeplex.com/
http://zerobugs.codeplex.com/documentation

$ sudo apt-get install flex gtkmm-2.4 libatomic-ops-dev libelf-dev libgtksourceview2.0-dev
$ export BOOST_ROOT=~/thirdparty/boost
$ mkdir -p ~/thirdparty/zerobugs ; cd ~/thirdparty/zerobugs
;; Download zerobugs-NNNNN.zip from codeplex.com.
$ mv ~/Downloads/zerobugs-NNNNN.zip .
$ unzip zerobugs-NNNNN.zip
$ chmod +x ./build
$ ./build --help
$ ./build

===============================================================================

2012-03-22 Thu
PC-BSD 9: Set up ports:
References:
http://www.freebsd.org/doc/en_US.ISO8859-1/books/handbook/ports-using.html

First time only:
# cd /var/db/portsnap
# portsnap fetch
# portsnap extract

Thereafter:
# portsnap update

---

PC-BSD 9: Use newer version of GCC and binutils:
References:
http://www.freebsd.org/doc/en/articles/custom-gcc/article.html

# cd /usr/ports/devel/binutils && make install
   no   NLS
   YES  LIBSIGSEVG
# cd /usr/ports/lang/gcc47 && make install

---

PC-BSD 9: Install git:
# echo /usr/ports/*/*git*
# cd /usr/ports/devel/git ; make install

See notes in 2012-03-14 below for configuration of git and GitHub.

---

See notes in 2012-03-14 below for configuration of vim.

---

# echo /usr/ports/*/*subversion*
# cd /usr/ports/devel/subversion ; make install

---

PC-BSD 9: Install grin:
# cd /usr/ports/devel/py-setuptools ; make install
# easy-install ;; This doesn't work.  What else?

---

PC-BSD 9: Install Valgrind:
# cd /usr/ports/devel/valgrind; make install
;; Fails due to problematic dependencies.

---

PC-BSD 9: Install Boost C++ libraries:

===============================================================================

2012-03-14 Wed
$ dpkg --get-selections
$ dpkg -s <packagename>  ;; Info about installed package.

Application           DebPackage           PortsName
                                           /usr/ports/
-----------           ----------           ---------
a2ps                  a2ps                 (pre-installed)
git                   git-core             devel/git
                      git-gui
                      git-doc
gvim                  vim-gnome            (pre-installed)
gcc                   gcc                  lang/gcc[##]
g++                   g++                  (part of lang/gcc[##])
ddd                   ddd
nemiver               nemiver
grin                                       devel/py-setuptools
Exuberant C-tags      exuberant-ctags
Font Manager (gnome)  font-manager
gnuplot               gnuplot
graphviz              graphviz
Erlang                erlang-base
Firefox               firefox
Subversion            subversion           devel/subversion
Mercurial             mercurial
tree                  tree                 sysutils/tree
valgrind              valgrind             devel/valgrind

---
$ sudo apt-get install console-terminus ttf-dejavu ttf-droid ttf-inconsolata xfonts-terminus
---

Git setup:
$ sudo apt-get install git-core git-gui git-doc
$ git config --global user.name "Firstname Lastname"
$ git config --global user.email "your_email@youremail.com"

Configure git for GitHub:
$ git config --global github.user <github_username>
$ git config --global github.token <github_token> ;; See GitHub->AccountSettings.

Configure GitHub for us:
$ ssh-keygen -t rsa -C "your_email@youremail.com"
o  Enter your passphrase.
o  Add to GitHub.com (see https://github.com/settings/ssh).
o  $ ssh-add

Clone our repo:
$ git clone git@github.com:jpmaloney/basic.git

---

Vim config (after "git clone" above):
$ ln -s ~/basic/vimrc ~/.vimrc

---

Install grin:
Reference: http://pypi.python.org/pypi/grin
$ sudo apt-get install python-setuptools
$ sudo easy-install grin

---

Boost C++ libraries

Install some packages:
Library               DebPackage
-------               ----------
bzip2                 libbz2-dev
python-dev            python-dev

Download the Boost C++ libraries:
$ cd ~
$ mkdir -p ~/thirdparty/boost_versions ; cd ~/thirdparty/boost_versions
$ wget http://downloads.sourceforge.net/project/boost/boost/1.49.0/boost_1_49_0.tar.bz2
$ tar -xvf boost_1_49_0.tar.bz2

Make a symbolic link to the Boost C++ libraries:
$ cd ~/thirdparty
$ ln -s ~/thirdparty/boost_versions/boost_1_49_0 ~/thirdparty/boost

Verify that Boost header files are usable (after "git clone" above):
$ cd ~/basic/tests
$ g++ -I ~/thirdparty/boost boost_example.cpp -o boost_example
$ echo 1 2 3 | ./boost_example

Build custom binaries:
$ cd ~/thirdparty/boost_versions/boost_1_49_0/tools/build/v2
$ ./bootstrap.sh
;; Note: Must use ${HOME} rather than ~.
$ ./b2 install --prefix=${HOME}/thirdparty/boost_versions/boost_1_49_0_boost_build
$ ln -s ~/thirdparty/boost_versions/boost_1_49_0_boost_build ~/thirdparty/boost_build
;; Add b2 and bjam to the PATH env var:
$ vim ~/.bashrc
;; Add this line to ~/.bashrc:
export PATH=${PATH}:${HOME}/thirdparty/boost_build/bin

$ cd ~/thirdparty/boost_versions/boost_1_49_0
$ b2 toolset=gcc stage

Verify that Boost binary libraries are usable (after "git clone" and "b2 ..." above):
$ cd ~/basic/tests
$ g++ -I ~/thirdparty/boost boost_example_lib.cpp -o boost_example_lib \
~/thirdparty/boost/stage/lib/libboost_regex.a
$ ./boost_example_lib

Setup Boost.Build:
$ ln -sf ~/basic/user-config.jam ~/user-config.jam

---

Get and build LLVM/clang on Linux:

LLVM:
$ mkdir ~/llvm ; cd ~/llvm
$ svn co http://llvm.org/svn/llvm-project/llvm/trunk llvm

clang:
$ cd ~/llvm/llvm/tools
$ svn co http://llvm.org/svn/llvm-project/cfe/trunk clang

compiler-rt:
$ cd ~/llvm/llvm/projects
$ svn co http://llvm.org/svn/llvm-project/compiler-rt/trunk compiler-rt

libc++abi:
$ cd ~/llvm/llvm/tools
$ svn co http://llvm.org/svn/llvm-project/libcxxabi/trunk libcxxabi

libc++ (must be after libc++abi?):
$ cd ~/llvm/llvm/tools
$ svn co http://llvm.org/svn/llvm-project/libcxx/trunk libcxx

Create symbolic links to libc++ headers and binaries:
$ sudo ln -sf ~/llvm/llvm/tools/libcxx/include /usr/include/c++/v1
$ sudo ln -sf ~/llvm/llvm/tools/libcxxabi/include/cxxabi.h /usr/include/c++/v1/cxxabi.h
$ cd ~/llvm/llvm/tools/libcxx/lib
$ ./buildit    ;; This builds ~/llvm/llvm/tools/libcxx/lib/libc++.so.1.0
               ;; Note: On FreeBSD, ./buildit is not ready for prime time:
               ;; http://permalink.gmane.org/gmane.comp.compilers.clang.devel/19493
$ sudo ln -sf ~/llvm/llvm/tools/libcxx/lib/libc++.so.1.0 /usr/lib/libc++.so.1.0
$ sudo ln -sf /usr/lib/libc++.so.1.0 /usr/lib/libc++.so.1
$ sudo ln -sf /usr/lib/libc++.so.1 /usr/lib/libc++.so

Configure and build (first time only):
$ cd ~/llvm
$ mkdir build ; cd build
$ ../llvm/configure --enable-optimized
$ make -j4  ;; -j4 means "use 4 jobs".  Use 'gmake' on FreeBSD.
;; Add LLVM/clang to PATH env var:
$ vim ~/.bashrc
;; Linux: Add this line to ~/.bashrc:
export PATH=${PATH}:${HOME}/llvm/build/Release+Asserts/bin

Configure and build (thereafter):
$ cd ~/llvm/build
$ make update  ;; Use 'gmake' on FreeBSD.
$ make -j4     ;; Use 'gmake' on FreeBSD.

Run clang:
$ cd ~/basic
;;$ clang++ -std=c++0x -stdlib=libc++ hello.cpp
$ clang++ -std=c++0x -stdlib=libc++ hello.cpp -lstdc++

---

Chrome                ???

---

Typesafe Stack

---

===============================================================================

2012-03-13 Tue
Create this git repository.

===============================================================================

#
# end
#

